name: Update Releases
on:
  push:
    branches-ignore:
      - compat
    paths:
      - .github/workflows/update.yml
      - update-releases.sh

  workflow_dispatch:

  schedule:
    # Run every half hour. Actual changes happen way less frequently than this, but until github
    # adds a way to subscribe to events in other repos, we wanna poll pretty often.
    - cron: '*/30 * * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - uses: nixbuild/nix-quick-install-action@v31
      - name: Update releases
        run: ./update-releases.sh
      - run: git push

      - name: Commit changes
        run: |
          # Report changes with a notice on the action
          git diff --numstat | while IFS=$'\t' read -r add del file; do
              # TODO: annotate with the modified line numbers
              printf '::notice file=%s,title=%s modified::' "$file" "$file"
              ((add > 0)) && printf '%d lines added' "$add"
              ((add > 0 && del > 0)) && printf ', '
              ((del > 0)) && printf '%d lines removed' "$del"
              echo
          done

          releases_commit_msg=$(
              for f in releases/{stable,nightly}.nix; do
                  git show HEAD:"$f" | nix eval --json -f- |
                      jq --argjson new "$(nix eval --json -f "$f")" '
                          (map({(._version): true}) | add) as $old |
                          $new[]._version | if in($old) then empty end
                      '
              done | jq -rs '"releases: add \(join(", "))"'
          )

          mirrors_commit_msg=$(
              git show HEAD:releases/community-mirrors.txt |
                  jq -Rrs --rawfile new releases/community-mirrors.txt '
                      (split("\n") | map({(.): true}) | add) as $old |
                      $new | split("\n") | map(if in($old) then empty end) |
                      "mirrors: add \(join(", "))"
                  '
          )

          git commit -m "$releases_commit_msg" releases/{stable,nightly}.nix || :
          git commit -m "$mirrors_commit_msg" releases/community-mirrors.txt || :


      - name: Merge changes into compat branch
        if: github.ref == 'refs/heads/main'
        run: |
          git switch compat
          git merge main
          git push
